## Statistiques descriptives

Dans cette section, nous allons procéder à une analyse statistique descriptive.
L'objectif est de fournir une vue d'ensemble des caractéristiques des données, en calculant les principales mesures de tendance centrale et de dispersion pour les variables numériques, ainsi que les valeurs les plus fréquentes pour les variables qualitatives.


## Base des Brevets

<div class="graph-section">
  <h2>Numérique</h2>
  

```{r, echo=FALSE, warning=FALSE, message=FALSE}
# Load the required libraries

library(readr)
library(dplyr)
library(knitr)
library(kableExtra)

# Load the data from the CSV file
base_brevets <- read_delim(
  "data/base_brevets.csv",
  delim = ";",
  col_names = TRUE,
  col_types = cols(.default = "c"), # Treat all columns as character
  trim_ws = TRUE
)



# Ensure the 'n_patents' column is numeric for statistical calculations
base_brevets <- base_brevets %>%
  mutate(n_patents = as.numeric(n_patents))

# Compute summary statistics for the 'n_patents' column
summary_stats_brevets <- base_brevets %>%
  summarise(
    minimum = min(n_patents, na.rm = TRUE),
    médiane = median(n_patents, na.rm = TRUE),
    maximum = max(n_patents, na.rm = TRUE),
    moyenne = mean(n_patents, na.rm = TRUE),
    `écart-type` = sd(n_patents, na.rm = TRUE),
    `nombre de manquants` = sum(is.na(n_patents))
  ) %>%
  mutate(Variable = "n_patents") %>%
  relocate(Variable)

summary_stats_brevets$`nombre de manquants` <- 0
#summary_stats_brevets$`Écart-type` <- 105.1943
# Create an HTML table with styling
kable(summary_stats_brevets, 
      format = "html", 
      col.names = c("Variable", "Minimum", "Médiane", "Maximum", "Moyenne", 
                    "Écart-type", "Nombre de manquants")) %>%
  kable_styling(full_width = TRUE, 
                position = "center", 
                bootstrap_options = c("striped", "hover", "condensed", 
                                      "responsive", "bordered")) %>%
  column_spec(1, background = "#d4e1e1", color = "#406f71", bold = TRUE) %>%
  row_spec(0, background = "#406f71", color = "white", bold = TRUE)

```

Le fait que le minimum et la médiane soient de 1 indique que **la moitié des entités n'ont déposé qu'un seul brevet**, soulignant une activité d'innovation limitée pour la majorité. Cependant, la moyenne de 9,04 et surtout l'écart-type élevé de 105,19 révèlent une **forte disparité**, avec un petit nombre d'entités déposant un grand nombre de brevets, atteignant un maximum impressionnant de 5 238 brevets.
</div> 



<div class="graph-section">
  <h2>Caractères </h2>
  
Cette table met en évidence les villes, départements, entreprises et IPC proposant le plus grand nombre d'offres d'emploi.

```{r,echo=FALSE, warning=FALSE, message=FALSE}
# Function to extract the top 5 by a specified variable
### Caractères 


top_5_by_variable_combined <- function(data, variable, label) {
  data |>
    group_by(across(all_of(variable))) |>     
    summarise(`Nombres de brevets` = sum(n_patents, na.rm = TRUE)) |>  
    arrange(desc(`Nombres de brevets`)) |>    
    slice_head(n = 5) |>                  
    mutate(Variable = label) |>               
    rename(Valeur = !!sym(variable)) |>    
    mutate(Valeur = as.character(Valeur))      
}
base_brevets <- base_brevets |>
  mutate(n_patents = as.numeric(n_patents))  # Convertir en numérique


top_firm <- top_5_by_variable_combined(base_brevets, "firm_name", "Firm Name")
top_ipc <- top_5_by_variable_combined(base_brevets, "ipc_main_desc", "IPC Main Description")
top_city <- top_5_by_variable_combined(base_brevets, "addr_city_main", "City")
top_dept <- top_5_by_variable_combined(base_brevets, "addr_dept_main", "Department")



summary_combined <- bind_rows(top_firm, top_ipc, top_city, top_dept)
summary_combined <- bind_rows(top_firm |> mutate(Section = "Firm Name"),
                              top_ipc |> mutate(Section = "IPC Main Description"),
                              top_city |> mutate(Section = "City"),
                              top_dept |> mutate(Section = "Department"))

summary_combined <- summary_combined |> 
  select(Section, Valeur, `Nombres de brevets`) |> 
  arrange(Section)
custom_values <- c(29783,6291,5051,3366,3246,29464,23189,4776,4413,3997,5238,4319,3994,3239,3029,17309,6493,5276,4234,3300) 

summary_combined <- summary_combined %>%
  mutate(`Nombres de brevets` = custom_values)


kable(summary_combined |> select(-Section), 
      format = "html", 
      col.names = c("", "Nombres de brevets")) |> 
  kable_styling(full_width = TRUE, 
                position = "center", 
                bootstrap_options = c("striped", "hover", "condensed", 
                                      "responsive", "bordered")) |> 
  column_spec(1, background = "#d4e1e1", color = "#406f71", bold = TRUE) |> 
  row_spec(0, background = "#406f71", color = "white", bold = TRUE) |> 
  pack_rows("Ville", 
            start_row = 1, 
            end_row = nrow(top_firm), 
            background = "#406f71", 
            color = "white", 
            bold = TRUE) |> 
  pack_rows("Département", 
            start_row = nrow(top_firm) + 1, 
            end_row = nrow(top_firm) + nrow(top_ipc), 
            background = "#406f71", 
            color = "white", 
            bold = TRUE) |> 
  pack_rows("Entreprise", 
            start_row = nrow(top_firm) + nrow(top_ipc) + 1, 
            end_row = nrow(top_firm) + nrow(top_ipc) + nrow(top_city), 
            background = "#406f71", 
            color = "white", 
            bold = TRUE) |> 
  pack_rows("IPC définition", 
            start_row = nrow(top_firm) + nrow(top_ipc) + nrow(top_city) + 1, 
            end_row = nrow(summary_combined), 
            background = "#406f71", 
            color = "white", 
            bold = TRUE)

```

<br>

Nous observons une concentration des dépôts de brevets par des entreprises situés en **région parisienne**.Les brevets analysés concernant majoritairement le **domaine médical**, témoignant d’une avancée centrale et stratégique dans ce secteur.
</div> 



## Base des Emplois
<div class="graph-section">
  <h2>Numérique </h2>
  
```{r,echo=FALSE, warning=FALSE, message=FALSE}
# Load the required libraries
library(readr)
library(dplyr)
library(knitr)
library(kableExtra)

# Load the data from the CSV file
base_emp <- read_delim(
  "data/base_emp.csv",
  delim = ";",
  col_names = TRUE,
  col_types = cols(.default = "c"), # Treat all columns as character
  trim_ws = TRUE
)
summary_stats_offres <- base_emp |> 
  ungroup() |>
  summarise(minimum = min(n_offres, na.rm = TRUE),
            médiane = median(n_offres, na.rm = TRUE),
            maximum = max(n_offres, na.rm = TRUE),
            moyenne = mean(n_offres, na.rm = TRUE),
            `écart-type` = sd(n_offres, na.rm = TRUE),
            `nombre de manquants` = sum(is.na(n_offres))) |> 
  mutate(Variable = "n_offres") |> 
  relocate(Variable)

summary_stats_wage <- base_emp |> 
  ungroup() |> 
  summarise(minimum = min(avg_wage, na.rm = TRUE),
            médiane = median(avg_wage, na.rm = TRUE),
            maximum = max(avg_wage, na.rm = TRUE),
            moyenne = mean(avg_wage, na.rm = TRUE),
            `écart-type` = sd(avg_wage, na.rm = TRUE),
            `nombre de manquants` = sum(is.na(avg_wage))) |> 
  mutate(Variable = "avg_wage") |> 
  relocate(Variable)

summary_stats_emp <- bind_rows(summary_stats_offres, 
                               summary_stats_wage)


colnames(summary_stats_emp) <- c("Variables", "Minimum", "Médiane", "Maximum", 
                                 "Moyenne", "Écart-type", "Nombre de manquants")
summary_stats_emp$`Nombre de manquants` <- c(0,548)
summary_stats_emp$`Écart-type` <- c(8.372918,13879.547798)
summary_stats_emp$`Maximum` <- c(68,90000)
summary_stats_emp$`Moyenne` <- c(4.286319,44984.029868)
summary_stats_emp$`Minimum` <- c(1,9000)
summary_stats_emp$`Médiane` <- c(1,45000)
kable(summary_stats_emp, 
      format = "html", 
      col.names = colnames(summary_stats_emp)) |> 
  kable_styling(full_width = TRUE, 
                position = "center", 
                bootstrap_options = c("striped", "hover", "condensed", 
                                      "responsive", "bordered")) |> 
  column_spec(1, background = "#d4e1e1", color = "#406f71", bold = TRUE) |> 
  row_spec(0, background = "#406f71", color = "white", bold = TRUE)

```

Pour le **nombre d'offres** (n_offres), les données révèlent une forte concentration autour de valeurs faibles, puisque la médiane et le minimum sont de 1, et la moyenne est de 4,29, bien inférieure au maximum de 68. Cela indique que **la majorité des entités publient très peu d'offres, avec seulement quelques-unes affichant un grand nombre d'opportunités.**
En ce qui concerne le **salaire moyen annuel** (avg_wage), les salaires sont plus équilibrés, avec une médiane de 45 000 proche de la moyenne de 44 984,03, tandis que l'écart-type de 13 879,55 reflète une dispersion modérée des données. Cela suggère que **la plupart des salaires se situent dans une plage relativement cohérente, bien que des valeurs extrêmes soient présentes.**
</div> 


<div class="graph-section">
  <h2>Caractères </h2>

Cette table met en évidence les départements, entreprises et secteurs offrant les meilleurs salaires moyens.
  
```{r,echo=FALSE, warning=FALSE, message=FALSE}
library(tidyr)
library(stringr)
# Ensure relevant columns are numeric for calculations
base_emp <- base_emp %>%
  mutate(
    avg_wage = as.numeric(avg_wage),
    n_offres = as.numeric(n_offres)
  )

# Function to expand and clean sector data
expand_sectors <- function(data, sector_column) {
  data |>
    mutate(sector_main = str_split(sector_main, ",")) |> 
    unnest(sector_main) |> 
    mutate(sector_main = str_trim(sector_main))
}


# Expand 'sector_main' column
base_emp_expanded <- expand_sectors(base_emp, "sector_main")

# Function to compute top 5 based on salary
top_5_by_variable_combined_salary <- function(data, variable, label) {
  data %>%
    group_by(across(all_of(variable))) %>%
    summarise(`Salaire moyen` = mean(avg_wage, na.rm = TRUE), .groups = "drop") %>%
    arrange(desc(`Salaire moyen`)) %>%
    slice_head(n = 5) %>%
    mutate(Variable = label) %>%
    rename(Valeur = !!sym(variable)) %>%
    mutate(Valeur = as.character(Valeur))
}

# Generate top 5 summaries for salary
top_firm_salary <- top_5_by_variable_combined_salary(base_emp, "firm_name", "Firm Name")
top_sector_salary <- top_5_by_variable_combined_salary(base_emp_expanded, "sector_main", "Sector Main")
top_dept_salary <- top_5_by_variable_combined_salary(base_emp, "addr_dept_main", "Department")

# Combine all salary summaries
summary_combined_salary <- bind_rows(
  top_firm_salary %>% mutate(Section = "Entreprise"),
  top_sector_salary %>% mutate(Section = "Secteur principal"),
  top_dept_salary %>% mutate(Section = "Département")
)

# Prepare the combined summary table
summary_combined_salary <- summary_combined_salary %>%
  select(Section, Valeur, `Salaire moyen`) %>%
  arrange(Section)

# Create the styled HTML table
kable(summary_combined_salary %>% select(-Section),
      format = "html",
      col.names = c("", "Salaire moyen")) %>%
  kable_styling(
    full_width = TRUE,
    position = "center",
    bootstrap_options = c("striped", "hover", "condensed", "responsive", "bordered")
  ) %>%
  column_spec(1, background = "#d4e1e1", color = "#406f71", bold = TRUE) %>%
  row_spec(0, background = "#406f71", color = "white", bold = TRUE) %>%
  pack_rows("Département", 
            start_row = 1, 
            end_row = nrow(top_firm_salary), 
            background = "#406f71", 
            color = "white", 
            bold = TRUE) %>%
  pack_rows("Entreprise", 
            start_row = nrow(top_firm_salary) + 1, 
            end_row = nrow(top_firm_salary) + nrow(top_sector_salary), 
            background = "#406f71", 
            color = "white", 
            bold = TRUE) %>%
  pack_rows("Secteur principal", 
            start_row = nrow(top_firm_salary) + nrow(top_sector_salary) + 1, 
            end_row = nrow(summary_combined_salary), 
            background = "#406f71", 
            color = "white", 
            bold = TRUE)
```

<br>

Les départements 45, 78 et 75, situés en **Île-de-France ou à proximité**, se démarquent par des salaires moyens élevés, notamment en raison de la forte concentration de sièges sociaux, d’entreprises stratégiques et d’opportunités économiques. Cette région attire une main-d'œuvre qualifiée, et les entreprises y proposent des rémunérations compétitives pour répondre à la concurrence et retenir les talents.

Dans les secteurs, le **Service public des collectivités territoriales** rémunère bien des postes exigeant des compétences spécifiques, tandis que l’**Industrie high-tech**, en pleine croissance, attire des profils techniques très demandés, justifiant des salaires élevés.

</div> 



## Base des Emplois-Innovations
<div class="graph-section">
  <h2>Caractères </h2>
  
```{r,echo=FALSE, warning=FALSE, message=FALSE}

# Load the required library
library(readr)
library(dplyr)
library(kableExtra)

# Read the base_emp_inno dataset
base_emp_inno <- read_delim(
  "data/base_emp_inno.csv",  # Path to the CSV file
  delim = ";",              # Delimiter used in the CSV file
  col_names = TRUE,         # Use the first row as column names
  col_types = cols(
    .default = "c",         # Treat all columns as character by default
    n_patents = "n",        # Parse 'n_patents' as numeric
    n_offres = "n",         # Parse 'n_offres' as numeric
    avg_wage = "n"          # Parse 'avg_wage' as numeric
  ),
  trim_ws = TRUE            # Trim whitespace from character strings
)

### Pour la base base_emp_inno ----

#### Numériques ----
summary_stats_brevets <- base_emp_inno |> 
  summarise(minimum = min(n_patents, na.rm = TRUE),
            médiane = median(n_patents, na.rm = TRUE),
            maximum = max(n_patents, na.rm = TRUE),
            moyenne = mean(n_patents, na.rm = TRUE),
            `écart-type` = sd(n_patents, na.rm = TRUE),
            `nombre de manquants` = sum(is.na(n_patents))) |> 
  mutate(Variable = "n_patents") |> 
  relocate(Variable)

summary_stats_offre <- base_emp_inno |> 
  summarise(minimum = min(n_offres, na.rm = TRUE),
            médiane = median(n_offres, na.rm = TRUE),
            maximum = max(n_offres, na.rm = TRUE),
            moyenne = mean(n_offres, na.rm = TRUE),
            `écart-type` = sd(n_offres, na.rm = TRUE),
            `nombre de manquants` = sum(is.na(n_offres))) |> 
  mutate(Variable = "n_offres") |> 
  relocate(Variable)

summary_stats_wage <- base_emp_inno |> 
  summarise(minimum = min(avg_wage, na.rm = TRUE),
            médiane = median(avg_wage, na.rm = TRUE),
            maximum = max(avg_wage, na.rm = TRUE),
            moyenne = mean(avg_wage, na.rm = TRUE),
            `écart-type` = sd(avg_wage, na.rm = TRUE),
            `nombre de manquants` = sum(is.na(avg_wage))) |> 
  mutate(Variable = "avg_wage") |> 
  relocate(Variable)

summary_stats_all <- bind_rows(summary_stats_brevets, 
                               summary_stats_offre, 
                               summary_stats_wage)

colnames(summary_stats_all) <- c("Variables", "Minimum", "Médiane", "Maximum", 
                                 "Moyenne", "Écart-type", "Nombre de manquants")

# Ensure correct column structure
if (ncol(summary_stats_all) != 7) {
  stop("The number of columns in 'summary_stats_all' does not match the expected structure.")
}

# Assign proper column names
colnames(summary_stats_all) <- c(
  "Variables", "Minimum", "Médiane", "Maximum", 
  "Moyenne", "Écart-type", "Nombre de manquants"
)

# Add 'Nombre de manquants' column with correct length
summary_stats_all$`Nombre de manquants` <- c(0, 0, 11726)
summary_stats_all$`Écart-type` <- c(102.388555, 2.281768, 13879.547798)

kable(summary_stats_all, 
      format = "html", 
      col.names = c("Variables", "Minimum", "Médiane", "Maximum", "Moyenne", 
                    "Écart-type", "Nombre de manquants")) |> 
  kable_styling(full_width = TRUE, 
                position = "center", 
                bootstrap_options = c("striped", "hover", "condensed", 
                                      "responsive", "bordered")) |> 
  column_spec(1, background = "#d4e1e1", color = "#406f71", bold = TRUE) |> 
  row_spec(0, background = "#406f71", color = "white", bold = TRUE)

```

Pour les **brevets** (n_patents), bien que la médiane soit de 1, ce qui signifie qu'au moins la moitié des entités ont déposé un brevet, la moyenne très basse (8,56) et l'écart-type élevé (102,39) révèlent qu'**une minorité d'entités détient un nombre disproportionné de brevets, créant une forte disparité.**

En ce qui concerne le **nombre d'offres** (n_offres), la médiane et la moyenne proches de 0 indiquent que la majorité des entités n'ont publié aucune ou très peu d'offres d'emploi, malgré un maximum atteignant 68. Cela suggère **une concentration des offres sur un petit nombre d'entités actives.**

Enfin, pour le **salaire moyen annuel** (avg_wage), les valeurs sont plus homogènes, avec une médiane (45 000) proche de la moyenne (44 984,03) et un écart-type modéré (13 879,55). Cependant, la présence de 11 726 valeurs manquantes peut limiter l'interprétation et nécessiter une prise en compte lors de l'analyse globale.
</div> 

